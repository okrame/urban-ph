import{b as c,s,a as I,c as u,d as n}from"./index-CoHwh5eJ.js";const t=async r=>{try{const e={paymentId:r.paymentId||r.id||"DIRECT_PAYMENT",payerId:r.payerId||"UNKNOWN",amount:r.amount,currency:r.currency||"EUR",status:r.status||"COMPLETED",eventId:r.eventId,userId:r.userId,...r.bookingId&&{bookingId:r.bookingId},...r.orderId&&{orderId:r.orderId},createdAt:s(),updatedAt:s(),payerEmail:r.payerEmail||"",fullDetails:r.fullDetails||{}},d=await I(u(n,"payments"),e);return console.log("Payment record saved with ID:",d.id),d.id}catch(e){throw console.error("Error saving payment record:",e),e}},i=async(r,e)=>{try{const d=await c(r.eventId,{...r.userData,paymentDetails:{...e,status:e.status||"COMPLETED"}}),o=d==null?void 0:d.bookingId;return await t({paymentId:e.paymentId,payerId:e.payerId,amount:r.amount,currency:"EUR",status:e.status||"COMPLETED",eventId:r.eventId,userId:r.userData.userId,payerEmail:r.userData.email,orderId:e.orderId||r.orderId,...o&&{bookingId:o},fullDetails:e}),d}catch(d){throw console.error("Error processing booking payment:",d),d}};export{i as processBookingPayment,t as savePaymentRecord};
